ARTS Web server: This is a sub repository for the Antibiotic Resistant Target Seeker. 
This can be used to view results generated from the public server at https://arts.ziemertlab.com, or using output from the main analysis pipeline at https://bitbucket.org/ziemertlab/arts

I. Quickstart with Docker:

1) Install Docker and docker-compose:
        https://docs.docker.com/engine/installation/
        https://docs.docker.com/compose/install/

2) Clone repository and change directory:
        git clone https://bitbucket.org/ziemertlab/artswebapp
        cd artswebapp

3) Edit docker-compose.yml to point to desired results directory:

##Example##
...
        volumes:
         -/my/path/to/results:/arts/results
         -/my/path/to/uploads:/arts/uploads
...

4) Build and run container:
        docker-compose up
Notes:
- A pre-built image can also be run by downloading "docker-compose-artswebapp.yml" and running:
        docker-compose -f docker-compose-artswebapp.yml up
- docker can run in the background using "-d" flag
        docker-compose up -d
- list running docker images:
        docker-compose ps
- Shutdown docker images
        docker-compose down
        docker-compose -f docker-compose-artswebapp.yml down

The full ARTS pipeline with analysis engine can be built using similar docker files at https://bitbucket.org/ziemertlab/arts

II. Installation on linux (Debian 8 tested):

1) Downlaod and install requirements:
        apt-get update
        apt-get install -y python-pip python-dev libjpeg-dev libfreetype6-dev zlib1g-dev
        git clone https://bitbucket.org/ziemertlab/artswebapp && cd artswebapp
        printf "uwsgi" >> requirements.txt
        pip install -r requirements.txt
2) Edit desired folders in configs (config/artsapp_default.conf and config/uwsgi.conf)
3) Run server:
        uwsgi --ini config/uwsgi.conf
